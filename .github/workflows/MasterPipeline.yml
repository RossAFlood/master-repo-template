name: Builds Project Master

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs: 
      debug:
        type: boolean
        description: 'envoke debug mode'
        required: true
        default: false
      repo_owner:
        required: true
        description: owner of repo
        default: "EaglebrookAdvisors"

env:
  project_name: eba-dflt
  location: eastus2
  service_principle : $project_name-sp
  keyvault : kv-$project_name-$location
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID_NP }}
  third-party-nuget-feed: https://pkgs.dev.azure.com/${{ env.repo_owner }}/_packaging/third.party/nuget/v3/index.json
  vendor-test-nuget-feed: https://pkgs.dev.azure.com/${{ env.repo_owner }}/EagleOne/_packaging/vendor-test-feed/nuget/v3/index.json
  github-nuget-feed: https://nuget.pkg.github.com/${{ env.repo_owner }}/index.json
  dotnet-version: 6.0.x
  config-level: Debug
  web_app_1: staff
  web_app_1_artifact_path: 'Code/location/' # ie ./EBA.Orders.EventFunnel
  function_1: function1
  function_1_artifact_path: 'Code/location/' # ie ./EBA.Orders.EventFunnel
  repo_owner: ${{ repo_owner }}


jobs:
#############################################################################
# Debug On
#############################################################################
  debug_on:
    if: env.debug  == true
    runs-on: ubuntu-latest
    steps:
      - name: turning on debug
        run: |
          gh secret set ACTIONS_RUNNER_DEBUG  --body "true" --repo "${{ env.repo_owner }}/${{ inputs.project_name }}"

#############################################################################
# Builds
# if building more than one artifact clone this and change the name 
# and path below, add the job to the dev_webapp or dev_func "Needs"
#############################################################################

  build_artifact:
      uses: ${{ env.repo_owner }}/${{ env.project_name }}/.github/workflows/build-artifact.yml@main
      with:
        artifact-name:  ${{ web_app_1 }} #put in the functions or web app names you want to publish
        path: ${{ web_app_1_artifact_path }} # and path to it
      secrets: inherit


#############################################################################
# TERRAFORM PLAN
#############################################################################
  terraform_plan:
      uses: ${{ env.repo_owner }}/${{ env.project_name }}/.github/workflows/terrafrom-plan.yml@main
      with:
        artifact-name:  ${{ web_app_1 }} #put in the functions or web app names you want to publish
        path: ${{ web_app_1_artifact_path }} # and path to it
      secrets: inherit

 

#############################################################################
# DEV DEPLOY
# below is a setup for the first web app and fubction any more and you need 
# to copy and paste the job and change the 1s to 2s and 3s etc
#############################################################################

  dev:
    name: Deploy Dev artifacts to azure
    needs: [build_artifact, terraform_plan]
    env:
      environment: dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS_SP_DEV }}'
      
      - name: Apply Terraform
        id: apply
        continue-on-error: true
        run: |
          cd terraform/dev
          terraform apply \
            -input=false \
            -no-color \
            tfplan   

      - name: 'deploy Web App: ${{ web_app_1 }}'
        if: $web_app_1 != ''
        uses: azure/webapps-deploy@v2
        env:
          web_app_name1: $web_app_1-app-$environment-$location-001
        with:
          app-name: ${{ env.web_app_name1 }}  
          package: publish/${{ web_app_1 }} 

      - name: 'Deploy Function: ${{ function_1 }}'
        uses: Azure/functions-action@v1
        id: fa-orchestrator
        env:
          func_name1: $web_app_1-app-$environment-$location-001
        with:
          app-name: '${{ env.func_name1 }}'
          slot-name: 'STAGING'
          package: publish/${{ function_1 }}

#############################################################################
# QA DEPLOY
#############################################################################
  qa:
    name: Deploy QA artifacts to azure
    needs: [dev, terraform_plan]
    env:
      environment: qa
    runs-on: ubuntu-latest

#############################################################################
# UAT DEPLOY
#############################################################################
  uat:
    name: Deploy UAT artifacts to azure
    needs: [qa, terraform_plan]
    env:
      environment: uat
    runs-on: ubuntu-latest
#############################################################################
# PROD DEPLOY
#############################################################################
  prod:
    name: Deploy PROD artifacts to azure
    needs: [uat, terraform_plan]
    env:
      environment: prod
    runs-on: ubuntu-latest
    
#############################################################################
# Debug off
#############################################################################
  debug_off:
    if: env.debug  == true && always()
    runs-on: ubuntu-latest
    steps:
      - name: Turning off debug
        run: |
          gh secret set ACTIONS_RUNNER_DEBUG  --body "false" --repo "${{ env.repo_owner }}/${{ inputs.project_name }}"
